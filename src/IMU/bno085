#include <Wire.h>               // include wire library for i2c communication
#include <Adafruit_BNO08x.h>    // include adafruit library for bno085 imu

Adafruit_BNO08x bno085;         // create an instance of the imu

void setup() {
    Serial.begin(115200);  // start serial communication at 115200 baud rate
    while (!Serial) delay(10);  // wait for serial monitor to open

    Serial.println("initializing bno085...");
    
    // initialize the bno085 using i2c
    if (!bno085.begin_I2C()) { 
        Serial.println("bno085 not detected! check connections.");
        while (1);  // stop execution if imu is not found
    }
    
    Serial.println("bno085 detected!");

    // enable the rotation vector sensor to get quaternion-based orientation data
    if (!bno085.enableReport(SH2_ROTATION_VECTOR)) {
        Serial.println("could not enable rotation vector!");
        while (1);  // stop execution if enabling fails
    }
}

void loop() {
    sensors_event_t event;  // create a variable to store sensor data

    // check if new data is available from the imu
    if (bno085.getEvent(&event)) {
        // read quaternion values (w, x, y, z)
        float qW = event.orientation.w;
        float qX = event.orientation.x;
        float qY = event.orientation.y;
        float qZ = event.orientation.z;

        // convert quaternion to yaw (bearing) using the atan2 function
        float yaw = atan2(2.0f * (qW * qZ + qX * qY), 1.0f - 2.0f * (qY * qY + qZ * qZ));
        yaw = yaw * 180.0f / PI;  // convert yaw from radians to degrees

        // ensure yaw is within the range of 0-360 degrees
        if (yaw < 0) yaw += 360;

        // print the bearing to the serial monitor
        Serial.print("Robot bearing: ");
        Serial.print(yaw, 2);  // print yaw with two dp
        Serial.println("Â°");

        delay(100);  // wait 100 milliseconds before reading again
    }
}